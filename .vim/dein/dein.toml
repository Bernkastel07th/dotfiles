[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]] # カーソル位置のコンテキストに合わせてftを切り替える
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']
hook_add = '''
  " NORMALモードのカーソル移動中に頻繁に切り替わるとうざいのでデフォは無効化しておく(helpは例外)
  let g:precious_enable_switch_CursorMoved = { '*': 0, 'help': 1 }

  " INSERTモードのON/OFFに合わせてトグル
  " autocmd  InsertEnter * :PreciousSwitch
  " autocmd  InsertLeave * :PreciousRese
'''

[[plugins]] # カーソル位置のコンテキストのftを判定するライブラリ
repo = 'Shougo/context_filetype.vim'

[[plugins]] # 行番号の左側にdiffの+-とかが表示されるようにする、[c と ]c で前後のHunkに移動できる。
repo = 'airblade/vim-gitgutter'
hook_add = '''
  let g:gitgutter_sign_modified = 'M'
  let g:gitgutter_max_signs = 5000
  " カレント行のhunkについて diff/add/reset を行うマップを追加
  nmap <Leader>hs <Plug>GitGutterStageHunk
  nmap <Leader>ha <Plug>GitGutterStageHunk
  nmap <Leader>hr <Plug>GitGutterRevertHunk
  nmap <Leader>hp <Plug>GitGutterPreviewHunk
  nmap <Leader>hd <Plug>GitGutterPreviewHunk
'''

[[plugins]]
repo = 'kawaz/shellcheck.vim'
on_ft = ['sh']

[[plugins]]
repo = 'tyru/vim-altercmd'
on_event = ['VimEnter']
hook_source = '''
  " 使うには初期化処理が必要
  call altercmd#load()
  " helpを横分割で右側に開く
  CAlterCommand h[elp] vertical belowright help
  " helpを横分割で右側に開く
  CAlterCommand e tabnew
'''

[[plugins]]
# 言語ごとの機能拡張をサポートする言語サーバークライアント
repo = 'neoclide/coc.nvim'
build = './install.sh nightly'
merged = '0'
hook_add = '''
  nmap <silent> gd <Plug>(coc-definition)
  nmap <silent> gy <Plug>(coc-type-definition)
  nmap <silent> gi <Plug>(coc-implementation)
  nmap <silent> gr <Plug>(coc-references)
  " Remap for rename current word
  nmap <leader>rn <Plug>(coc-rename)
  " Highlight symbol under cursor on CursorHold
  autocmd CursorHold * silent call CocActionAsync('highlight')
  " Use K for show documentation in preview window
  nnoremap <silent> K :call <SID>show_documentation()<CR>
  function! s:show_documentation()
    if &filetype == 'vim'
      execute 'h '.expand('<cword>')
    else
      call CocAction('doHover')
    endif
  endfunction
'''
